/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: operations["read_root__get"];
  };
  "/users/login": {
    post: operations["login_users_login_post"];
  };
  "/users/": {
    get: operations["get_users__get"];
    post: operations["signup_users__post"];
  };
  "/access-points/{id}": {
    /** Returns JSON containg current configuration of the Access Point with given database id. */
    get: operations["get_ap_config_by_id_access_points__id__get"];
    /**
     * Endpoint for changing Access Point's configuration. The request must be accompanied with a JSON (formatted like the result of the GET request to this endpoint) that contains only the values to be changed.
     *
     * **WARNING**: Parameters [`id`, `deviceId`, `ip`] **CANNOT** be changed.
     */
    put: operations["change_ap_config_access_points__id__put"];
  };
  "/access-points/": {
    /**
     * Returns a paginated JSON result of all Access Points which have the given string as part of their name.
     * Returned list can be an empty list.
     */
    get: operations["get_ap_configs_access_points__get"];
  };
  "/console/": {
    post: operations["cmd_input_console__post"];
  };
  "/networks/{id}": {
    /** Returns JSON containg current Giga configuration of the Network with given database id. */
    get: operations["get_network_config_by_id_networks__id__get"];
    /**
     * Endpoint for changing Network's configuration. The request must be accompanied with a JSON (formatted like the result of the GET request to this endpoint) that contains only the values to be changed.
     *
     * **WARNING**: Parameter `id` **CANNOT** be changed.
     */
    put: operations["change_network_config_networks__id__put"];
  };
  "/wireless/{id}": {
    /** Returns JSON containg current configuration of the Wireless with given database id. */
    get: operations["get_wireless_config_by_id_wireless__id__get"];
    /**
     * Endpoint for changing Wireless profile's configuration. The request must be accompanied with a JSON (formatted like the result of the GET request to this endpoint) that contains only the values to be changed.
     *
     * **WARNING**: Parameter `id` **CANNOT** be changed.
     */
    put: operations["change_wireless_config_wireless__id__put"];
  };
  "/security/{id}": {
    /** Returns JSON containg current configuration of the Security with given database id. */
    get: operations["get_security_config_by_id_security__id__get"];
    /**
     * Endpoint for changing Security profile's configuration. The request must be accompanied with a JSON (formatted like the result of the GET request to this endpoint) that contains only the values to be changed.
     *
     * **WARNING**: Parameter `id` **CANNOT** be changed.
     */
    put: operations["change_security_config_security__id__put"];
  };
  "/mac-acls/{id}": {
    /** Returns JSON containg current configuration of the MAC ACL with given database id. */
    get: operations["get_mac_acl_config_by_id_mac_acls__id__get"];
    /**
     * Endpoint for changing MAC ACL's configuration. The request must be accompanied with a JSON (formatted like the result of the GET request to this endpoint) that contains only the values to be changed.
     *
     * **WARNING**: Parameter `id` **CANNOT** be changed.
     */
    put: operations["change_mac_acl_config_mac_acls__id__put"];
  };
}

export interface components {
  schemas: {
    /**
     * APSchema
     * @example {
     *   "deviceId": 5,
     *   "id": 1,
     *   "ip": "192.168.1.6",
     *   "name": "Floor 1 AP",
     *   "networks": [
     *     {
     *       "id": 2,
     *       "name": "Guests"
     *     },
     *     {
     *       "id": 3,
     *       "name": "Employees"
     *     }
     *   ]
     * }
     */
    APSchema: {
      /** Id */
      id: number;
      /** Deviceid */
      deviceId: number;
      /** Name */
      name: string;
      /** Ip */
      ip: string;
      /** Networks */
      networks: components["schemas"]["GenericIdentSchema"][];
    };
    /**
     * CmdSchema
     * @example {
     *   "args": [
     *     "variables"
     *   ],
     *   "cmd": "show"
     * }
     */
    CmdSchema: {
      /** Cmd */
      cmd: string;
      /** Args */
      args: string[];
    };
    /**
     * GenericIdSchema
     * @example {
     *   "id": 1
     * }
     */
    GenericIdSchema: {
      /** Id */
      id: number;
    };
    /**
     * GenericIdentSchema
     * @example {
     *   "id": 1,
     *   "name": "SomeName"
     * }
     */
    GenericIdentSchema: {
      /** Id */
      id: number;
      /** Name */
      name: string;
    };
    /** GetAPsSchema */
    GetAPsSchema: {
      /** Docs */
      docs: components["schemas"]["APSchema"][];
      /** Totaldocs */
      totalDocs: number;
      /** Totalpages */
      totalPages: number;
      /** Hasnextpage */
      hasNextPage: boolean;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** MacAclSchema */
    MacAclSchema: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Macs */
      macs: string[];
      /** Security */
      security: components["schemas"]["GenericIdentSchema"][];
    };
    /** MacListSchema */
    MacListSchema: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Macs */
      macs: string[];
    };
    /** NG_AP_Schema */
    NG_AP_Schema: {
      /** Id */
      id: number;
      /** Deviceid */
      deviceId: number;
      /** Name */
      name: string;
      /** Ip */
      ip: string;
    };
    /** NG_MAC_ACL_Schema */
    NG_MAC_ACL_Schema: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Macs */
      macs: string[];
    };
    /** NG_Security_Schema */
    NG_Security_Schema: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Wirelesssecuritytype */
      wirelessSecurityType: number;
      /** Radius */
      radius: Partial<string> & Partial<unknown>;
      /** Eap */
      eap: boolean;
      /** Macacltype */
      macAclType: number;
      /** Macacls */
      macAcls: components["schemas"]["NG_MAC_ACL_Schema"][];
    };
    /** NG_Wireless_Schema */
    NG_Wireless_Schema: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Vht */
      vht: boolean;
      /** Acs */
      acs: boolean;
      /** Beaconinterval */
      beaconInterval: number;
      /** Rtsctsthreshold */
      rtsCtsThreshold: number;
    };
    /** NetworkGigaSchema */
    NetworkGigaSchema: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Ssid */
      ssid: string;
      /** Countrycode */
      countryCode: string;
      /** Accesspoints */
      accessPoints: components["schemas"]["NG_AP_Schema"][];
      /** Wireless */
      wireless: components["schemas"]["NG_Wireless_Schema"][];
      /** Security */
      security: components["schemas"]["NG_Security_Schema"][];
    };
    /** NetworkSetSchema */
    NetworkSetSchema: {
      /** Id */
      id: number;
    };
    /** PutAPSchema */
    PutAPSchema: {
      /** Name */
      name?: Partial<string> & Partial<unknown>;
      /** Networks */
      networks?: Partial<components["schemas"]["NetworkSetSchema"][]> &
        Partial<unknown>;
    };
    /** PutMacAclSchema */
    PutMacAclSchema: {
      /** Name */
      name?: Partial<string> & Partial<unknown>;
      /** Macs */
      macs?: Partial<string[]> & Partial<unknown>;
      /** Security */
      security?: Partial<components["schemas"]["GenericIdSchema"][]> &
        Partial<unknown>;
    };
    /** PutNetworkSchema */
    PutNetworkSchema: {
      /** Name */
      name?: Partial<string> & Partial<unknown>;
      /** Ssid */
      ssid?: Partial<string> & Partial<unknown>;
      /** Countrycode */
      countryCode?: Partial<string> & Partial<unknown>;
      /** Accesspoints */
      accessPoints?: Partial<components["schemas"]["GenericIdSchema"][]> &
        Partial<unknown>;
      /** Wireless */
      wireless?: Partial<components["schemas"]["GenericIdSchema"][]> &
        Partial<unknown>;
      /** Security */
      security?: Partial<components["schemas"]["GenericIdSchema"][]> &
        Partial<unknown>;
    };
    /** PutSecuritySchema */
    PutSecuritySchema: {
      /** Name */
      name?: Partial<string> & Partial<unknown>;
      /** Wirelesssecuritytype */
      wirelessSecurityType?: Partial<number> & Partial<unknown>;
      /** Radius */
      radius?: Partial<string> & Partial<unknown>;
      /** Eap */
      eap?: Partial<boolean> & Partial<unknown>;
      /** Macacltype */
      macAclType?: Partial<number> & Partial<unknown>;
      /** Macacls */
      macAcls?: Partial<components["schemas"]["GenericIdSchema"][]> &
        Partial<unknown>;
      /** Networks */
      networks?: Partial<components["schemas"]["GenericIdSchema"][]> &
        Partial<unknown>;
    };
    /** PutWirelessSchema */
    PutWirelessSchema: {
      /** Name */
      name?: Partial<string> & Partial<unknown>;
      /** Vht */
      vht?: Partial<boolean> & Partial<unknown>;
      /** Acs */
      acs?: Partial<boolean> & Partial<unknown>;
      /** Beaconinterval */
      beaconInterval?: Partial<number> & Partial<unknown>;
      /** Rtsctsthreshold */
      rtsCtsThreshold?: Partial<number> & Partial<unknown>;
      /** Networks */
      networks?: Partial<components["schemas"]["GenericIdSchema"][]> &
        Partial<unknown>;
    };
    /**
     * SecuritySchema
     * @example {
     *   "eap": false,
     *   "id": 2,
     *   "mac_acl_type": 1,
     *   "mac_acls": [
     *     {
     *       "id": 2,
     *       "macs": [
     *         "01:01:01:01:01:01",
     *         "01:01:01:01:01:02"
     *       ],
     *       "name": "ACL 1"
     *     }
     *   ],
     *   "name": "Default",
     *   "networks": [
     *     {
     *       "id": 2,
     *       "name": "Guests"
     *     },
     *     {
     *       "id": 3,
     *       "name": "Employees"
     *     }
     *   ],
     *   "radius": "192.168.1.1",
     *   "wireless_security_type": 4
     * }
     */
    SecuritySchema: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Wirelesssecuritytype */
      wirelessSecurityType: number;
      /** Radius */
      radius: Partial<string> & Partial<unknown>;
      /** Eap */
      eap: boolean;
      /** Macacltype */
      macAclType: number;
      /** Macacls */
      macAcls: components["schemas"]["MacListSchema"][];
      /** Networks */
      networks: components["schemas"]["GenericIdentSchema"][];
    };
    /**
     * UserLoginCredentialsSchema
     * @example {
     *   "password": "password",
     *   "username": "user.name"
     * }
     */
    UserLoginCredentialsSchema: {
      /** Username */
      username: string;
      /** Password */
      password: string;
    };
    /** UserLoginResponseSchema */
    UserLoginResponseSchema: {
      /** Accesstoken */
      accessToken: string;
    };
    /**
     * UserSchema
     * @example {
     *   "firstName": "Name",
     *   "lastName": "Surname",
     *   "username": "user.name"
     * }
     */
    UserSchema: {
      /** Firstname */
      firstName: string;
      /** Lastname */
      lastName: string;
      /** Username */
      username: string;
    };
    /**
     * UserSignUpSchema
     * @example {
     *   "firstName": "Name",
     *   "lastName": "Surname",
     *   "password": "password",
     *   "username": "user.name"
     * }
     */
    UserSignUpSchema: {
      /** Username */
      username: string;
      /** Password */
      password: string;
      /** Firstname */
      firstName: string;
      /** Lastname */
      lastName: string;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (Partial<string> & Partial<number>)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
    /**
     * WirelessSchema
     * @example {
     *   "acs": false,
     *   "beacon_interval": 30,
     *   "id": 3,
     *   "name": "Wireless 1",
     *   "networks": [
     *     {
     *       "id": 2,
     *       "name": "Guests"
     *     },
     *     {
     *       "id": 3,
     *       "name": "Employees"
     *     }
     *   ],
     *   "vht": true
     * }
     */
    WirelessSchema: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Vht */
      vht: boolean;
      /** Acs */
      acs: boolean;
      /** Beaconinterval */
      beaconInterval: number;
      /** Rtsctsthreshold */
      rtsCtsThreshold: number;
      /** Networks */
      networks: components["schemas"]["GenericIdentSchema"][];
    };
  };
}

export interface operations {
  read_root__get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  login_users_login_post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserLoginResponseSchema"];
        };
      };
      /** Incorrect username or password */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserLoginCredentialsSchema"];
      };
    };
  };
  get_users__get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** No user found */
      404: unknown;
    };
  };
  signup_users__post: {
    responses: {
      /** Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** User with the provided username already exists */
      409: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserSignUpSchema"];
      };
    };
  };
  /** Returns JSON containg current configuration of the Access Point with given database id. */
  get_ap_config_by_id_access_points__id__get: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["APSchema"];
        };
      };
      /** Invalid ID */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Endpoint for changing Access Point's configuration. The request must be accompanied with a JSON (formatted like the result of the GET request to this endpoint) that contains only the values to be changed.
   *
   * **WARNING**: Parameters [`id`, `deviceId`, `ip`] **CANNOT** be changed.
   */
  change_ap_config_access_points__id__put: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      204: never;
      /** Invalid ID */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PutAPSchema"];
      };
    };
  };
  /**
   * Returns a paginated JSON result of all Access Points which have the given string as part of their name.
   * Returned list can be an empty list.
   */
  get_ap_configs_access_points__get: {
    parameters: {
      query: {
        name?: Partial<string> & Partial<unknown>;
        page?: number;
        limit?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetAPsSchema"];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  cmd_input_console__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CmdSchema"];
      };
    };
  };
  /** Returns JSON containg current Giga configuration of the Network with given database id. */
  get_network_config_by_id_networks__id__get: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["NetworkGigaSchema"];
        };
      };
      /** Invalid ID */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Endpoint for changing Network's configuration. The request must be accompanied with a JSON (formatted like the result of the GET request to this endpoint) that contains only the values to be changed.
   *
   * **WARNING**: Parameter `id` **CANNOT** be changed.
   */
  change_network_config_networks__id__put: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** Invalid ID */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PutNetworkSchema"];
      };
    };
  };
  /** Returns JSON containg current configuration of the Wireless with given database id. */
  get_wireless_config_by_id_wireless__id__get: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["WirelessSchema"];
        };
      };
      /** Invalid ID */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Endpoint for changing Wireless profile's configuration. The request must be accompanied with a JSON (formatted like the result of the GET request to this endpoint) that contains only the values to be changed.
   *
   * **WARNING**: Parameter `id` **CANNOT** be changed.
   */
  change_wireless_config_wireless__id__put: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** Invalid ID */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PutWirelessSchema"];
      };
    };
  };
  /** Returns JSON containg current configuration of the Security with given database id. */
  get_security_config_by_id_security__id__get: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SecuritySchema"];
        };
      };
      /** Invalid ID */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Endpoint for changing Security profile's configuration. The request must be accompanied with a JSON (formatted like the result of the GET request to this endpoint) that contains only the values to be changed.
   *
   * **WARNING**: Parameter `id` **CANNOT** be changed.
   */
  change_security_config_security__id__put: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** Invalid ID */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PutSecuritySchema"];
      };
    };
  };
  /** Returns JSON containg current configuration of the MAC ACL with given database id. */
  get_mac_acl_config_by_id_mac_acls__id__get: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MacAclSchema"];
        };
      };
      /** Invalid ID */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Endpoint for changing MAC ACL's configuration. The request must be accompanied with a JSON (formatted like the result of the GET request to this endpoint) that contains only the values to be changed.
   *
   * **WARNING**: Parameter `id` **CANNOT** be changed.
   */
  change_mac_acl_config_mac_acls__id__put: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** Invalid ID */
      400: unknown;
      /** Unauthorized */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PutMacAclSchema"];
      };
    };
  };
}

export interface external {}
